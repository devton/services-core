kind: pipeline
name: default

steps:
- name: 'dev_subtree_push'
  image: alpine
  environment:
    SSH_PRIVATE_KEY:
      from_secret: ssh_private_key
    CATARSE_JS_GITHUB_REMOTE:
      from_secret: catarse_js_github_remote
    CATARSE_GITHUB_REMOTE:
      from_secret: catarse_github_remote
    COMMON_API_GITHUB_REMOTE:
      from_secret: common_api_github_remote
    SERVICE_CORE_DB_GITHUB_REMOTE:
      from_secret: service_core_db_github_remote
    PROXY_GITHUB_REMOTE:
      from_secret: proxy_github_remote
    SUBTREES_REMOTE_BRANCH:
      from_secret: subtrees_remote_branch
    SSH_KEYSCAN_DOMAIN:
      from_secret: ssh_keyscan_domain
    CATARSE_SANDBOX_REMOTE_DOMAIN:
      from_secret: catarse_sandbox_remote_domain
  commands:
    - apk update && apk add git git-subtree openssl openssh
    - ./.drone/setup_privs
    - ./.drone/setup_dev_remotes


  # - name: 'test_common_models'
  #   image: comum/docker-build-env:latest
  #   group: build
  #   volumes:
  #   - name: dockersock
  #     path: /var/run
  #   commands:
  #     - sleep 5
  #     - docker run -e POSTGRES_DB=services_core_test --name pg_default_models -p 5432:5432 -d postgres:9.6
  #     - cd services/service-core-db/
  #     - docker build -f Dockerfile -t comum/services-core:test . \
  #     - cd ../common_models/
  #     - docker build -f Dockerfile -t comum/common_models:test . \
  #     - cd ../../
  #     - docker run -i --rm --link pg_default_models:pg_default comum/services-core:test psql -U postgres -h pg_default -p 5432 services_core_test < services/service-core-db/init.sql
  #     - docker run -i --rm --link pg_default_models:pg_default comum/services-core:test psql -U postgres -h pg_default -p 5432 -c "alter user postgrest with superuser;"
  #     - docker run -i --rm --link pg_default_models:pg_default -e="DATABASE_URL=postgres://postgres@pg_default:5432/services_core_test" comum/services-core:test ./scripts/run_migrations.sh
  #     - docker run -i --rm --link pg_default_models:localhost.pg -e="RAILS_ENV=test" -e="DATABASE_URL=postgres://postgres@localhost.pg:5432/services_core_test" comum/common_models:test bundle exec rspec spec
  # 
  # - name: 'test_catarse_js'
  #   image: node:10
  #   group: build
  #   volumes:
  #   - name: dockersock
  #     path: /var/run
  #   commands:
  #     - sleep 5
  #     - apt-get update && apt-get install -y curl build-essential git
  #     # chrome deps
  #     - apt-get install -y wget unzip fontconfig locales gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
  #     - cd services/catarse.js
  #     - npm install
  #     - npm test
  # 
  # - name: 'test_service_core_db'
  #   image: comum/docker-build-env:latest
  #   group: build
  #   volumes:
  #   - name: dockersock
  #     path: /var/run
  #   commands:
  #     - sleep 5
  #     - cd services/service-core-db
  #     - sh run_sql_tests_with_docker.sh
  # 
  # - name: 'test_payment_service_lib'
  #   image: comum/docker-build-env:latest
  #   group: build
  #   volumes:
  #   - name: dockersock
  #     path: /var/run
  #   commands:
  #     - sleep 5
  #     - docker run -e POSTGRES_DB=services_core_test --name pg_default -d postgres:9.6
  #     - cd services/service-core-db/
  #     - docker build -f Dockerfile -t comum/services-core:test .
  #     - cd ../payment-service-api/
  #     - docker build -f Dockerfile -t comum/payment-service:test .
  #     - cd ../../
  #     - docker run -i --rm --link pg_default:pg_default comum/services-core:test psql -U postgres -h pg_default -p 5432 services_core_test < services/service-core-db/init.sql
  #     - docker run -i --rm --link pg_default:pg_default comum/services-core:test psql -U postgres -h pg_default -p 5432 -c "alter user postgrest with superuser;"
  #     - docker run -i --rm --link pg_default:pg_default -e="DATABASE_URL=postgres://postgres@pg_default:5432/services_core_test" comum/services-core:test ./scripts/run_migrations.sh
  #     - docker run -i --rm --link pg_default:localhost.pg -e="RAILS_ENV=test" -e="DATABASE_URL=postgres://postgres@localhost.pg:5432/services_core_test" comum/payment-service:test npm test -- -v
  # 
  # 
  # - name: 'test_proxy_config'
  #   image: comum/docker-build-env:latest
  #   group: build
  #   volumes:
  #   - name: dockersock
  #     path: /var/run
  #   commands:
  #     - sleep 5
  #     - cd services/proxy
  #     - ./test.sh
  # 
  # - name: 'test_common_api'
  #   image: circleci/ruby:2.5.1-node-browsers-legacy
  #   group: build
  #   volumes:
  #   - name: dockersock
  #     path: /var/run
  #   commands:
  #     - sleep 5
  #     - sudo apt update && sudo apt install postgresql-client
  #     - sudo chmod -R 777 services/
  #     - curl https://sh.rustup.rs -sSf | sh -s -- -y 
  #     - . $HOME/.cargo/env
  #     - cargo install diesel_cli --no-default-features --features "postgres"
  #     - sudo ln -s $HOME/.cargo/bin/diesel /usr/local/bin/diesel
  #     - cd services/service-core-db/
  #     - touch Cargo.toml
  #     - psql -U postgres -h database -p 5432 services_core_test < ./init.sql
  #     - psql -U postgres -h database -p 5432 -c "alter user postgrest with superuser;" 
  #     - DATABASE_URL=postgres://postgres@database:5432/services_core_test ./scripts/run_migrations.sh
  #     - cd ../../
  #     - cd services/common-api
  #     - bundle config disable_local_branch_check true
  #     - bundle config local.common_models ../common_models
  #     - bundle install
  #     - RAILS_ENV=test DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL=true DATABASE_URL=postgres://postgres:example@database:5432/services_core_test bundle exec rspec spec
  # 
  # 
  # - name: 'test_catarse'
  #   image: circleci/ruby:2.4.4-jessie-node-browsers
  #   group: build
  #   commands:
  #     - sudo apt update && sudo apt install postgresql-client
  #     - sudo chmod -R 777 services/catarse
  #     - cd services/catarse
  #     - bundle install
  #     - npm install
  #     - RAILS_ENV=test DATABASE_URL=postgres://postgres:example@databasecatarse:5432/catarse_test bundle exec rake db:migrate
  #     - RAILS_ENV=test DATABASE_URL=postgres://postgres:example@databasecatarse:5432/catarse_test bundle exec rspec spec
  # 
#
#services:
#- name: docker
#  image: docker:dind
#  detach: true
#  privileged: true
#  volumes:
#  - name: dockersock
#    path: /var/run
#
#- name: databasecatarse
#  image: postgres:9.4-alpine
#  detach: true
#  environment:
#    POSTGRES_DB: catarse_test
#  ports:
#    - 5432
#
#- name: database
#  image: postgres:9.6-alpine
#  detach: true
#  environment:
#    POSTGRES_DB: services_core_test
#  ports:
#    - 5432
#
#volumes:
#- name: dockersock
#  temp: {}
